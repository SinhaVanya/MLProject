1. Create repository in Github by clicking new and Give the name and create repository.
2. Open the folder in vscode
3. Create environment

    Open the terninal and open command prompt in it.
    conda create -p venv python==3.8 -y
    cls- clear screen
    conda activate venv/

4. Create a Readme file

    This is a file where you can write project description

5. First we will see if we sink with repository.


    when doing first time
    git init
    git add README.md
    git commit -m "first commit"
    git branch -M main
    git remote add origin "repository"
    git push -u origin main
    if we did change in my repository and want to be present in work area, do
    git pull

    And we have anything we need to add in repository
    git add .
    git commit -m "abc"
    git push -u origin main
    
6. We need to create requirements.txt

    This will have all the packages that we really need to install while we are implementing the project

7. Now we need to have setup.py

    (This setup.py will be responsible in creating my machine learning application as a package. This package can be installed in our project or in another project as well.)
    in setup.py, install_requires, we put modules that we require. But it is not feasible to write all here.
    So instead of install_requires=['pandas','numpy,'seaborn'] write install_requires=get_requirements('E:\udemy\Data_Science\requirements.txt')

8.Create src folder

    Entire project development will happen in src folder

9. In src folder create __init__.py file.

    So whenever in setup.py, find_packages is there, it will just go and see how many folder have __init__.py then it will consider that as a package and will try to build this
    Once this is built it, we can import it anywhere whenever we want.

10. In src folder, create "component" folder and create __init__.py in it. It need to created as package

    Components are basically all the modules which we will be creating. 
    For example 
        Data Injection (Reading Dataset from database, divide into train and test) ->data_ingestion.py
        Data Transformation (All the transformation will be here) ->data_transformation.py
        Model Trainer(All training code of model) ->model_trainer.py

11. In src folder, create "pipeline" folder

    create __init__.py
    One is the training pipeline and another is prediction pipeline. Create seperate train_pipeline.py file which will be triggering py file in component folder
    Create seperate predict_pipeline.py(for prediction purpose)

12. In src folder we will create 3 important file logger.py,exception.py and utils.py (common functionality will be present in utils)

